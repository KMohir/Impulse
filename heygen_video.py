#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ HeyGen API —Å –∞–≤–∞—Ç–∞—Ä–æ–º
"""
import requests
import json
import time
import os
from dotenv import load_dotenv

load_dotenv()

# HeyGen API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
HEYGEN_API_KEY = os.getenv('HEYGEN_API_KEY', '')
HEYGEN_API_URL = "https://api.heygen.com/v2/video/generate"
HEYGEN_STATUS_URL = "https://api.heygen.com/v1/video_status.get"

class HeyGenVideoCreator:
    def __init__(self, api_key):
        self.api_key = api_key
        self.headers = {
            "X-Api-Key": api_key,
            "Content-Type": "application/json"
        }
    
    def create_video(self, script_text, avatar_id="default", voice_id="default", background_color="#FFFFFF"):
        """
        –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ —Å –∞–≤–∞—Ç–∞—Ä–æ–º
        
        Args:
            script_text (str): –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–º
            avatar_id (str): ID –∞–≤–∞—Ç–∞—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "Angela-inblackskirt-20220820")
            voice_id (str): ID –≥–æ–ª–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "1bd001e7e50f421d891986aad5158bc8")
            background_color (str): –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤ HEX —Ñ–æ—Ä–º–∞—Ç–µ
        
        Returns:
            dict: –û—Ç–≤–µ—Ç –æ—Ç API —Å video_id
        """
        payload = {
            "video_inputs": [
                {
                    "character": {
                        "type": "avatar",
                        "avatar_id": avatar_id,
                        "avatar_style": "normal"
                    },
                    "voice": {
                        "type": "text",
                        "input_text": script_text,
                        "voice_id": voice_id
                    },
                    "background": {
                        "type": "color",
                        "value": background_color
                    }
                }
            ],
            "dimension": {
                "width": 1920,
                "height": 1080
            },
            "aspect_ratio": "16:9",
            "test": False  # False –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è, True –¥–ª—è —Ç–µ—Å—Ç–∞
        }
        
        try:
            response = requests.post(
                HEYGEN_API_URL,
                headers=self.headers,
                json=payload
            )
            response.raise_for_status()
            return response.json()
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
            if hasattr(e.response, 'text'):
                print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {e.response.text}")
            return None
    
    def check_video_status(self, video_id):
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ
        
        Args:
            video_id (str): ID –≤–∏–¥–µ–æ
        
        Returns:
            dict: –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ
        """
        params = {"video_id": video_id}
        
        try:
            response = requests.get(
                HEYGEN_STATUS_URL,
                headers=self.headers,
                params=params
            )
            response.raise_for_status()
            return response.json()
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
            return None
    
    def wait_for_video(self, video_id, max_wait_time=600, check_interval=10):
        """
        –û–∂–∏–¥–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ
        
        Args:
            video_id (str): ID –≤–∏–¥–µ–æ
            max_wait_time (int): –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            check_interval (int): –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        
        Returns:
            dict: –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ
        """
        elapsed_time = 0
        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ (ID: {video_id})...")
        
        while elapsed_time < max_wait_time:
            status = self.check_video_status(video_id)
            
            if status:
                video_status = status.get('data', {}).get('status', 'unknown')
                print(f"üìä –°—Ç–∞—Ç—É—Å: {video_status} (–ø—Ä–æ—à–ª–æ {elapsed_time}—Å)")
                
                if video_status == "completed":
                    video_url = status.get('data', {}).get('video_url', '')
                    print(f"‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! URL: {video_url}")
                    return status
                elif video_status == "failed":
                    print(f"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å")
                    return status
            
            time.sleep(check_interval)
            elapsed_time += check_interval
        
        print(f"‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è ({max_wait_time}—Å)")
        return None


def main():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    if not HEYGEN_API_KEY:
        print("‚ùå HEYGEN_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        print("–î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: HEYGEN_API_KEY=–≤–∞—à_–∫–ª—é—á")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    creator = HeyGenVideoCreator(HEYGEN_API_KEY)
    
    # –ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –≤–∏–¥–µ–æ
    script = """
    –ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é –Ω–∞—à –±—Ä–µ–Ω–¥.
    –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.
    –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –±—Ä–µ–Ω–¥ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!
    """
    
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã HeyGen (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏):
    # "Angela-inblackskirt-20220820" - –∂–µ–Ω—â–∏–Ω–∞ –≤ —á–µ—Ä–Ω–æ–π —é–±–∫–µ
    # "josh-lite3-20230714" - –º—É–∂—á–∏–Ω–∞
    # "Anna_public_3_20240108" - –∂–µ–Ω—â–∏–Ω–∞ –ê–Ω–Ω–∞
    
    avatar_id = "Angela-inblackskirt-20220820"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π
    voice_id = "1bd001e7e50f421d891986aad5158bc8"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –≥–æ–ª–æ—Å
    
    print("üé¨ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å –∞–≤–∞—Ç–∞—Ä–æ–º...")
    print(f"üìù –°–∫—Ä–∏–ø—Ç: {script[:50]}...")
    print(f"üë§ –ê–≤–∞—Ç–∞—Ä ID: {avatar_id}")
    
    # –°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ
    result = creator.create_video(
        script_text=script,
        avatar_id=avatar_id,
        voice_id=voice_id,
        background_color="#FFFFFF"
    )
    
    if result and result.get('data'):
        video_id = result['data'].get('video_id')
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è! ID: {video_id}")
        
        # –û–∂–∏–¥–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        final_status = creator.wait_for_video(video_id)
        
        if final_status:
            video_url = final_status.get('data', {}).get('video_url', '')
            if video_url:
                print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –°–∫–∞—á–∞–π—Ç–µ –≤–∏–¥–µ–æ: {video_url}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ")


if __name__ == "__main__":
    main()
